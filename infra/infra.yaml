AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda Container

Parameters:
  EntrypointImage:
    Type: String
    Description: Enter de ImageUri of lambda application.
  
  FeatureGenerationImage:
    Type: String
    Description: Enter de ImageUri of lambda application.
  
  BatchEventImage:
    Type: String
    Description: Enter de ImageUri of lambda application.
  
  ProcessingImage:
    Type: String
    Description: Enter de ImageUri of lambda application.
  
  S3BucketName:
    Type: String
    Default: crawler-ml-challenge
    Description: Bucket name to put csv with query urls.

  DynamoTableName:
    Type: String
    Default: crawler_appearences
    Description: Table name of our database.


Resources:

  Entrypoint:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: crawler-entrypoint
      Role: !GetAtt Role.Arn
      PackageType: Image
      Code:
        ImageUri: !Ref EntrypointImage
      Timeout: 10

  FeatureGeneration:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: crawler-feature-generation
      Role: !GetAtt Role.Arn
      PackageType: Image
      Code:
        ImageUri: !Ref FeatureGenerationImage
      Timeout: 10
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoTableName

  Processing:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: crawler-processing
      Role: !GetAtt Role.Arn
      PackageType: Image
      Code:
        ImageUri: !Ref ProcessingImage
      Timeout: 10
      Environment:
        Variables:
          QUEUE_URL: !Ref UrlsQueue
          TABLE_NAME: !Ref DynamoTableName
  
  BatchEvent:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: crawler-batch-event
      Role: !GetAtt Role.Arn
      PackageType: Image
      Code:
        ImageUri: !Ref BatchEventImage
      Timeout: 10
      Environment:
        Variables:
          BUCKET: !Ref S3BucketName
          QUEUE_URL: !Ref UrlsQueue
          DEPTH: 5

  UrlsQueue:
    Type: AWS::SQS::Queue
    Properties: 
      QueueName: urls-queue

  SQSTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties: 
      EventSourceArn: !GetAtt UrlsQueue.Arn
      FunctionName: !Ref Processing
      BatchSize: 1
  
  BucketCsv:
    Type: AWS::S3::Bucket
    DependsOn: BatchEvent
    Properties:
      BucketName: !Ref S3BucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: inputs/
            Function: !GetAtt BatchEvent.Arn
  
  Database:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions:
        - 
          AttributeName: link
          AttributeType: S
      KeySchema:
        - 
          AttributeName: link
          KeyType: HASH
      
      TableName: !Ref DynamoTableName

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: lambda-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - "cloudwatch:*"
                  - "ec2:DescribeSecurityGroups"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeVpcs"
                  - "events:*"
                  - "iam:GetPolicy"
                  - "iam:GetPolicyVersion"
                  - "iam:GetRole"
                  - "iam:GetRolePolicy"
                  - "iam:ListAttachedRolePolicies"
                  - "iam:ListRolePolicies"
                  - "iam:ListRoles"
                  - "iam:PassRole"
                  - "kms:ListAliases"
                  - "lambda:*"
                  - "logs:*"
                  - "tag:GetResources"
                  - "s3:*"
                  - "sqs:*"
                  - "dynamodb:*"
                Resource: '*'
      MaxSessionDuration: 3600 